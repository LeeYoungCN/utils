if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(ARCHITECTURE "x64")
else()
    set(ARCHITECTURE "x86")
endif()

if (NOT CMAKE_PRESET)
    if (${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
        if(MSVC)
            set(RAW_CMAKE_PRESET "MSVC_${ARCHITECTURE}_${CMAKE_BUILD_TYPE}")
        elseif (MINGW)
            set(RAW_CMAKE_PRESET "Win_MinGW_${CMAKE_BUILD_TYPE}")
        elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
            if(${CMAKE_C_FLAGS} STREQUAL "--target=x86_64-w64-mingw32")
                set(RAW_CMAKE_PRESET "Win_Clang_mingw_${CMAKE_BUILD_TYPE}")
            elseif(${CMAKE_C_FLAGS} STREQUAL "--target=x86_64-pc-windows-msvc")
                set(RAW_CMAKE_PRESET "Win_Clang_msvc_${CMAKE_BUILD_TYPE}")
            else()
                message(WARNNING "Unknown clang target: ${CMAKE_C_FLAGS}")
            endif()
        else()
            message(WARNNING "Unknown compiler: ${CMAKE_CXX_COMPILER_ID}")
        endif()
    elseif (${CMAKE_SYSTEM_NAME} STREQUAL "Linux")
        if (CMAKE_COMPILER_IS_GNUCC)
            set(RAW_CMAKE_PRESET "Linux_GNU_${CMAKE_BUILD_TYPE}")
        elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
            set(RAW_CMAKE_PRESET "Linux_Clang_${CMAKE_BUILD_TYPE}")
        else()
            message(WARNNING "Unknown compiler: ${CMAKE_CXX_COMPILER_ID}")
        endif()
    elseif(${CMAKE_SYSTEM_NAME} STREQUAL "Darwin")
        if (CMAKE_COMPILER_IS_GNUCC)
            set(RAW_CMAKE_PRESET "${CMAKE_SYSTEM_NAME}_GNU_${CMAKE_BUILD_TYPE}")
        elseif(CMAKE_CXX_COMPILER_ID MATCHES "(Apple)?Clang")
            set(RAW_CMAKE_PRESET "${CMAKE_SYSTEM_NAME}_Clang_${CMAKE_BUILD_TYPE}")
        else()
            message(WARNNING "Unknown compiler: ${CMAKE_CXX_COMPILER_ID}")
        endif()
    else()
        message(WARNNING "Unknown system: ${CMAKE_SYATEM_NAME}")
    endif()

    string(TOLOWER ${RAW_CMAKE_PRESET} RAW_CMAKE_PRESET)
    set(CMAKE_PRESET ${RAW_CMAKE_PRESET})
endif()
